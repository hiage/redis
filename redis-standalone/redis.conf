# Redis Configuration File

## GENERAL

# Set the Redis server to run as a background daemon.
daemonize no  # Redis runs as a foreground process in Docker.

# Set the Redis server port.
port 6379

# Bind to specific network interfaces. Docker's default is to bind to all interfaces.
bind 0.0.0.0

# Protect the Redis server from unauthorized access.
protected-mode yes

## MEMORY MANAGEMENT

# Set a maximum memory limit for Redis.
maxmemory 2gb

# 2gb, 123m.

# Define the memory eviction policy when the limit is reached.
maxmemory-policy allkeys-lru

## PERSISTENCE

# Enable RDB snapshotting and configure frequency.
save 900 1
save 300 10
save 60 10000

# Enable AOF persistence and configure the fsync policy.
appendonly yes
appendfsync everysec

# Enable incremental AOF fsync to improve performance during rewriting.
aof-rewrite-incremental-fsync yes

## NETWORK CONFIGURATION

# Increase the backlog size to handle more incoming connections.
tcp-backlog 511

# Set a timeout for idle connections.
timeout 300

## CPU AND THREADS

# Set the frequency of internal Redis operations.
hz 10

# Enable active memory defragmentation to reduce fragmentation.
active-defrag yes

## CLIENT CONNECTIONS

# Configure client output buffer limits.
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit slave 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

## LOGGING

# Set the logging level.
loglevel notice

# Set the path for the log file. Note: Docker's filesystem is ephemeral; consider using Docker volumes.
logfile "/data/redis-server.log"

## SECURITY

# Set a password for Redis (replace with a secure password).
#requirepass your_secure_password_here

# Enable or disable Redis' protected mode.
protected-mode yes

## MISCELLANEOUS

# Set the maximum number of clients allowed.
maxclients 10000

# Set the maximum number of databases.
databases 16

# Specify the directory where Redis will save its data files.
dir /data
